{
  "operator" : { //operadores internos de Latin es porque todos los operadores son genericos
    "logical" : [ //son solamenten los operadores que despues se mapearan directamente a la plataforma
      {
        "name" : "", //name que deberia tener el operatdor
        "nfunction" : "", //cantidad de funciones que tendra
        "type" : "" //si es un operador de BinaryToUnaryOperator, UnaryToUnaryOperator, SinkOperator, SourceOperator
      }
    ],
    "expression" : [ // como las Expression igualmente son dinamicas, estas pueden cambiar para modificar el orden o
      //el simbolo para lo que sea mas comodo para el desarrollador.
      {
        "name" : "", // nombre del operador de Expression
        "type" : "", // es el tipo de la Expression osea si es logico o matematico
        "real_operator": "", //es verdadero operador que se utiliza ejemplo el name es "ADD" pero el verdadero es una suma
        "type_class" : "", //es es binario, unario, constante
        "value" : "" // este solo aplica cuando la clase es constante
      }

    ],
    "function" : [ // este define la clase que tiene la funcion y sus propiedades
      {
        "name" : "", //nombre ocupado para invocarlo
        "type_return" : "", //tipo del retorno que generar la funcion
        "class" : "", // clase que contiene el methodo que se debe invocar
        "method" : "", //name of the method que se invocara
        "nparam" : "", // cantidad de paramentros que se necesitan para invocar al metodo
        "parameters" : [] // tipo de los parametros que necesita el methodo estos deben ir en orden
      }
    ]
  },
  "mapping" : {
    "rheem" : {
      "package_latin" : "", //nombre del package que tiene las clases que se mapearan
      "extend_latin"  : "", //clase de la que extienden los operadores en latin
      "package_rheem" : "", //nombre del package que tiene las clases que se mapearan para construir
      "extend_rheem"  : "", //clase de la que extienden los operadores en rheem
      "class_reflex" : [
        {
          "name_latin": "", //clase en latin que se ocupara para mapear
          "name_rheem": "", //clase espejo
          "param" : [  //paramentros que se necesitan para que funcione el operador, y el orden en el que se debe entregar.
            "function", "class.type.input", "class.type.output"
          ]
        }
      ]
    }
  }
}